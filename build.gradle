buildscript {
    repositories {
    	maven { url  = 'https://plugins.gradle.org/m2/' }
    }
	dependencies {
		classpath "io.freefair.gradle:lombok-plugin:6.5.1"
		classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.0"
	}
}

plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.0'
}

apply plugin: "io.freefair.lombok"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
	maven { url  = 'https://plugins.gradle.org/m2/' }
	maven { url = 'https://maven.parchmentmc.org' }
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

configurations {
    shade
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:${project.parchment_version}")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
    implementation(include('com.eliotlash.mclib:mclib:20'))
    shade 'com.eliotlash.mclib:mclib:20'

	implementation 'com.google.code.gson:gson:2.10'
	implementation 'it.unimi.dsi:fastutil:8.5.9'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

shadowJar {
    configurations = [project.configurations.shade]
    from sourceSets.main.output
    duplicatesStrategy = 'exclude'
    exclude('META-INF/services/**')
    exclude('it/**')
    exclude('com/google/**')
    relocate 'com.eliotlash', 'dev.sleep.shadowed.eliotlash'
    classifier 'dev'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
